/************************************************************************/
/*																		*/
/*	video_demo.h	--	ZYBO Video demonstration 						*/
/*																		*/
/************************************************************************/
/*	Author: Sam Bobrowicz												*/
/*	Copyright 2015, Digilent Inc.										*/
/************************************************************************/
/*  Module Description: 												*/
/*																		*/
/*		This file contains code for running a demonstration of the		*/
/*		Video input and output capabilities on the ZYBO. It is a good	*/
/*		example of how to properly use the display_ctrl and				*/
/*		video_capture drivers.											*/
/*																		*/
/*																		*/
/************************************************************************/
/*  Revision History:													*/
/* 																		*/
/*		11/25/2015(SamB): Created										*/
/*																		*/
/************************************************************************/

#ifndef VIDEO_DEMO_H_
#define VIDEO_DEMO_H_

/* ------------------------------------------------------------ */
/*				Include File Definitions						*/
/* ------------------------------------------------------------ */

#include "xil_types.h"

/* ------------------------------------------------------------ */
/*					Miscellaneous Declarations					*/
/* ------------------------------------------------------------ */

#define SCREEN_STATE_1 1
#define SCREEN_STATE_2 2
#define SCREEN_STATE_3 3

#define DEMO_MAX_FRAME (640*480*3)
#define DEMO_STRIDE (640 * 3)
#define WIDTH (640 * 3)



/*
 * Configure the Video capture driver to start streaming on signal
 * detection
 */
#define DEMO_START_ON_DET 1

/* ------------------------------------------------------------ */
/*					Structure Declarations						*/
/* ------------------------------------------------------------ */

enum alienMovement{
	start,
	xIncr,
	moveDown,
	xDecr,
	gameOver,
	victory

}moveAlien = start;

enum playerMovement{
	init,
	wait,
	moveRight,
	moveLeft
}movePlayer = init;

enum bulletMovement{
	standby,
	fire,
	yDecr
}moveBullet = fire;

typedef struct {
	u32 ytop;
	u32 ybtm;
	u32 xLeft;
	u32 xRight;
	u8 status;
} Enemy;


typedef struct {
	u32 ytop;
	u32 ybtm;
	u32 xLeft;
	u32 xRight;
} Hero;

typedef struct {
	u32 ytop;
	u32 ybtm;
	u32 xLeft;
	u32 xRight;
} Bullet;
/* ------------------------------------------------------------ */
/*					Procedure Declarations						*/
/* ------------------------------------------------------------ */

void DemoInitialize();
void DemoRun();
void DemoPrintMenu();
void DemoChangeRes();
void DemoCRMenu();
void DemoInvertFrame(u8 *srcFrame, u8 *destFrame, u32 width, u32 height, u32 stride);
void DemoPrintTest(u8 *frame, u32 width, u32 height, u32 stride, int screen_state);
void DemoScaleFrame(u8 *srcFrame, u8 *destFrame, u32 srcWidth, u32 srcHeight, u32 destWidth, u32 destHeight, u32 stride);
void DemoISR(void *callBackRef, void *pVideo);

/* our procedures */
void SDread();
void SDwrite();
int SD();
void pictureInit();
void picturePrint(u8 *frame, u8 *picture, int x, int y, int height, int width, int remove);

void DefineHero(u32 width, u32 height, s32 skew);
void MoveHero();

void DefineAlien(u32 width, u32 height, u32 xMove, u32 yMove);
void DrawDeathAlien(u8 *frame, u32 width, u32 height, u32 stride);
void MoveAliens();

void DrawSprites(u8 opt, u8 *frame, u32 width, u32 height, u32 stride);

void DefineGameOver(u8 *frame, u32 xcor, u32 ycor, u32 size, u32 stride);
void DrawGOscreen(u8 *frame, u32 xcor, u32 ycor, u32 size, u32 stride, u8 Red, u8 Blue, u8 Green);

void DefineBullet(u32 width, u32 height, s32 bulletMove, s32 skew);
void DrawBullet(u8 *frame, u32 width, u32 height, u32 stride);
void MoveBullet();

void Collision();

void SwapBuf();
/* ------------------------------------------------------------ */


/************************************************************************/

#endif /* VIDEO_DEMO_H_ */
